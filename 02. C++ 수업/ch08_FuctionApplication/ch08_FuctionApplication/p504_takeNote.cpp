/*
------------------------------------------------------------------------------------

[참조 매개변수는 언제 사용하는가?]

- 호출 함수에 있는 데이터 객체의 변경을 허용하기 위해
- 전체 데이터 객체 대신에 참조를 전달하여 프로그램의 속도를 높이기 위해

------------------------------------------------------------------------------------

[함수가 전달된 데이터를 변경하지 않고 사용만 하는 경우]

- 데이터 객체가 기본 데이터형이나 작은 구조체라면 값으로 전달
- 데이터 객체가 배열이라면 포인터가 유일한 선택이므로 포인터를 사용
포인터를 const를 지시하는 포인터로 만듦
- 데이터 객체가 덩치 큰 구조체라면 const 포인터나 const 참조를 사용하여
프로그램의 속도를 높임
이것은 구조체나 클래스 설계를 복사하는 데 드는 시간과 공간을 절약함
포인터나 참조를 const로 만듦
- 데이터 객체가 클래스 객체라면 cosnt 참조 사용
클래스 설계 자체가 흔히 참조를 사용할 것을 요구
이것이 C++에 const 기능을 추가한 주된 이유이기도 함
클래스 객체 매개변수의 전달은 참조로 전달하는 것이 표준

------------------------------------------------------------------------------------

[함수가 호출 함수의 데이터를 변경하는 경우]

- 데이터 객체가 기본 데이터형이면 포인터를 사용
FixIt(&)와 같은 코드가 있다면(여기서 x는 int형),
이 함수의 목적은 x를 변경하려는 것이 분명함
- 데이터 객체가 배열이면 유일한 선택은 포인터를 사용하는 것
- 데이터 객체가 구조체이면 참조 또는 포인터를 사용함
- 데이터 객체가 클래스 객체이면 참조를 사용함

------------------------------------------------------------------------------------
*/