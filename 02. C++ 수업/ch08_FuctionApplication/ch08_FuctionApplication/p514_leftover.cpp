// 514p

#include<iostream>

unsigned long left(unsigned long num, unsigned ct);
char *left(const char *str, int n = 1);

using namespace std;

int main()
{
	char *trip = "Hawaii!!";
	unsigned long n = 12345678;
	char *temp;

	for (int i = 1; i < 10; i++)
	{
		cout << left(n, i) << endl;
		temp = left(trip, i);
		cout << temp << endl;
		delete[] temp;	// 재사용을 위해 임시 기억 공간을 해지한다
	}

	return 0;
}

// 정수 num의 앞에서부터 ct 개의 숫자 리턴
unsigned long left(unsigned long num, unsigned ct)
{
	unsigned digits = 1;
	unsigned long n = num;

	if (ct == 0 || num == 0)
		return 0;	// 숫자가 없으면 0 리턴
	while (n /= 10)
		digits++;

	if (digits > ct)
	{
		ct = digits - ct;
		while (ct--)
			num /= 10;	// 남아있는 ct개의 숫자 리턴
		return num;
	}
	else
		return num;	// ct >= 전체 숫자 개수 이면 정수 자체 리턴
}

// str 문자열의 앞에서부터 n개의 문자를 취하여 새로운 문자열을 구성하고, 이를 지시하는 포인터 리턴
char *left(const char *str, int n)
{
	if (n < 0)
		n = 0;

	char *p = new char[n + 1];
	int i;
	for (i = 0; i < n&&str[i]; i++)
		p[i] = str[i];	// 문자열 복사

	while (i <= n)
		p[i++] = '\0';	// 문자열 나머지를 '\0'으로 설정

	return p;
}
